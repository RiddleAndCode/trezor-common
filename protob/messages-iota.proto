///////////////////
// Iota messages //
///////////////////
/**
 * Request: Get address counter
 * @next IotaAddressCounter
 */
 message IotaGetAddressCounter {
}
/**
 * Returns the address counter as currently set in storage
 * @prev IotaGetAddressCounter
 */
message IotaAddressCounter {
	optional uint32 address_counter = 1;
}
/**
 * Request: Set address counter to storage
 * @next Success
 * @next Failure
 */
message IotaSetAddressCounter {
	optional uint32 address_counter = 1;
}
/**
 * Request: Ask device for a public address
 * @next IotaAddress
 */
message IotaGetAddress {
	optional uint32 address_index = 1;
}
/**
 * Response: Contains public address
 * @prev IotaGetAddress
 */
message IotaAddress {
	optional uint32 address_index = 1;
	optional string address = 2;
}
/**
 * Request: Approve a value transfer.
 * @next IotaSignedTx
 * @next Failure
 */
message IotaTxRequest {
	optional string receiving_address = 1;			// Address to which the amount is send
	optional uint64 transfer_amount = 2;			// Amount of iota to be transferred
	optional uint64 balance = 3;					// Balance on the current address (to calculate remainder)
	optional uint64 timestamp = 4;					// Timestamp to be used for the transaction
	optional string tag = 5;						// Transaction tag, defaults to 'TREZOR'
}
/**
 * Response: Transaction hash and signatures
 * @prev IotaTxRequest
 */
message IotaSignedTx {
	optional string bundle_hash = 1;			// Bundle hash (hash of all transaction elements)
	optional string first_signature = 2;		// First signature (security level 1)
	optional string second_signature = 3;		// Second signature (security level 2)		
}
